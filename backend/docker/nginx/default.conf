# docker/nginx/default.conf
# Configuration pour le développement
server {
    listen 80;
    server_name localhost;
    
    # Redirection vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name localhost;

    # Certificats SSL
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Logs
    access_log /var/log/nginx/showme.access.log;
    error_log /var/log/nginx/showme.error.log;

    # API Backend
    location /api/ {
        # Rate limiting pour l'API
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Auth endpoints avec rate limiting strict
    location /api/v1/auth/ {
        limit_req zone=auth burst=10 nodelay;
        
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Documentation Swagger
    location /api/docs {
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Fichiers statiques uploadés
    location /uploads/ {
        alias /app/uploads/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Sécurité pour les uploads
        location ~* \.(php|asp|aspx|jsp)$ {
            deny all;
        }
    }

    # Health check
    location /health {
        proxy_pass http://app:3000/health;
        access_log off;
    }

    # Cartes publiques (redirection vers l'app)
    location ~ ^/u/([a-zA-Z0-9_-]+)$ {
        proxy_pass http://app:3000/api/v1/cards/public/$1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Page par défaut
    location / {
        return 200 '{"message":"ShowMe API is running","version":"1.0.0","docs":"/api/docs"}';
        add_header Content-Type application/json;
    }

    # Erreurs personnalisées
    error_page 404 /404.json;
    location = /404.json {
        return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
        add_header Content-Type application/json;
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        return 500 '{"error":"Internal Server Error","message":"Something went wrong"}';
        add_header Content-Type application/json;
    }
}

# Configuration pour MinIO (stockage S3)
server {
    listen 80;
    server_name minio.localhost;

    location / {
        proxy_pass http://minio:9001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}